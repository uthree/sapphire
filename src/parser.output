Terminals unused in grammar

    PERCENT
    EQUAL
    PERIOD
    COMMA
    COLON
    SEMICOLON
    LESSTHAN
    GREATERTHAN
    LEFT_PARENTHESIS
    RIGHT_PARENTHESIS
    LEFT_BLACKET
    RIGHT_BLACKET
    LEFT_CURLY_BLACKET
    RIGHT_CURLY_BLACKET
    EQUAL_EQUAL
    LESSTHAN_EQUAL
    GREATERTHAN_EQUAL
    NOT_EQUAL
    PULS_EQUAL
    MINUS_EQUAL
    ASTERISK_EQUAL
    SLASH_EQUAL
    NEWLINE
    KW_AND
    KW_OR
    KW_NOT
    KW_XOR
    KW_NAND
    LW_NOR
    KW_IMPORT
    KW_FROM
    KW_AS
    KW_CLASS
    KW_FUNCTION
    KW_CONSTRUCTOR
    KW_GETTER
    KW_SETTER
    KW_IF
    KW_ELSE
    KW_END
    KW_WHILE
    KW_UNTIL
    KW_BREAK
    KW_RETURN


Grammar

    0 $accept: program $end

    1 program: expression

    2 expression: expression SLASH expression
    3           | expression ASTERISK expression
    4           | expression PULS expression
    5           | expression MINUS expression
    6           | INTEGER_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PULS (258) 4
    MINUS (259) 5
    ASTERISK (260) 3
    SLASH (261) 2
    PERCENT (262)
    EQUAL (263)
    PERIOD (264)
    COMMA (265)
    COLON (266)
    SEMICOLON (267)
    LESSTHAN (268)
    GREATERTHAN (269)
    LEFT_PARENTHESIS (270)
    RIGHT_PARENTHESIS (271)
    LEFT_BLACKET (272)
    RIGHT_BLACKET (273)
    LEFT_CURLY_BLACKET (274)
    RIGHT_CURLY_BLACKET (275)
    EQUAL_EQUAL (276)
    LESSTHAN_EQUAL (277)
    GREATERTHAN_EQUAL (278)
    NOT_EQUAL (279)
    PULS_EQUAL (280)
    MINUS_EQUAL (281)
    ASTERISK_EQUAL (282)
    SLASH_EQUAL (283)
    NEWLINE (284)
    KW_AND (285)
    KW_OR (286)
    KW_NOT (287)
    KW_XOR (288)
    KW_NAND (289)
    LW_NOR (290)
    KW_IMPORT (291)
    KW_FROM (292)
    KW_AS (293)
    KW_CLASS (294)
    KW_FUNCTION (295)
    KW_CONSTRUCTOR (296)
    KW_GETTER (297)
    KW_SETTER (298)
    KW_IF (299)
    KW_ELSE (300)
    KW_END (301)
    KW_WHILE (302)
    KW_UNTIL (303)
    KW_BREAK (304)
    KW_RETURN (305)
    INTEGER_LITERAL (306) 6


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    expression <ast> (54)
        on left: 2 3 4 5 6
        on right: 1 2 3 4 5


State 0

    0 $accept: • program $end

    INTEGER_LITERAL  shift, and go to state 1

    program     go to state 2
    expression  go to state 3


State 1

    6 expression: INTEGER_LITERAL •

    $default  reduce using rule 6 (expression)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: expression •
    2 expression: expression • SLASH expression
    3           | expression • ASTERISK expression
    4           | expression • PULS expression
    5           | expression • MINUS expression

    PULS      shift, and go to state 5
    MINUS     shift, and go to state 6
    ASTERISK  shift, and go to state 7
    SLASH     shift, and go to state 8

    $default  reduce using rule 1 (program)


State 4

    0 $accept: program $end •

    $default  accept


State 5

    4 expression: expression PULS • expression

    INTEGER_LITERAL  shift, and go to state 1

    expression  go to state 9


State 6

    5 expression: expression MINUS • expression

    INTEGER_LITERAL  shift, and go to state 1

    expression  go to state 10


State 7

    3 expression: expression ASTERISK • expression

    INTEGER_LITERAL  shift, and go to state 1

    expression  go to state 11


State 8

    2 expression: expression SLASH • expression

    INTEGER_LITERAL  shift, and go to state 1

    expression  go to state 12


State 9

    2 expression: expression • SLASH expression
    3           | expression • ASTERISK expression
    4           | expression • PULS expression
    4           | expression PULS expression •
    5           | expression • MINUS expression

    MINUS     shift, and go to state 6
    ASTERISK  shift, and go to state 7
    SLASH     shift, and go to state 8

    $default  reduce using rule 4 (expression)


State 10

    2 expression: expression • SLASH expression
    3           | expression • ASTERISK expression
    4           | expression • PULS expression
    5           | expression • MINUS expression
    5           | expression MINUS expression •

    ASTERISK  shift, and go to state 7
    SLASH     shift, and go to state 8

    $default  reduce using rule 5 (expression)


State 11

    2 expression: expression • SLASH expression
    3           | expression • ASTERISK expression
    3           | expression ASTERISK expression •
    4           | expression • PULS expression
    5           | expression • MINUS expression

    SLASH  shift, and go to state 8

    $default  reduce using rule 3 (expression)


State 12

    2 expression: expression • SLASH expression
    2           | expression SLASH expression •
    3           | expression • ASTERISK expression
    4           | expression • PULS expression
    5           | expression • MINUS expression

    $default  reduce using rule 2 (expression)
